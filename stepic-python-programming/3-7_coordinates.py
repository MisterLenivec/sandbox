# Группа биологов в институте биоинформатики завела себе черепашку.
# После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
# север 10
# запад 20
# юг 30
# восток 40
# где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — это положительное
# расстояние в сантиметрах, которое должна пройти черепашка.
# Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу,
# которая определит, куда в итоге биологи приведут черепашку. Для этого программисты просят вас написать программу,
# которая выведет точку, в которой окажется черепашка после всех команд. Для простоты они решили считать,
# что движение начинается в точке (0, 0), и движение на восток увеличивает первую координату, а на север — вторую.
# Программе подаётся на вход число команд n, которые нужно выполнить черепашке, после чего n строк с самими командами.
# Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки. Все координаты целочисленные.

# First solution
number = int(input())
d = {'восток': 0, 'север': 0}
for i in range(number):
    a = input().split()
    if (a[0] == 'север'):
        d['север'] += int(a[1])
    elif (a[0] == 'запад'):
        d['восток'] -= int(a[1])
    elif (a[0] == 'юг'):
        d['север'] -= int(a[1])
    elif (a[0] == 'восток'):
        d['восток'] += int(a[1])

for keys, values in d.items():
    print(values, end = ' ')

#Second
# d = {'восток': 0, 'север': 0, 'запад': 0, 'юг': 0}
# for i in range(int(input())):
#     a = input().split()
#     d[a[0]] += int(a[1])
# print(d['восток'] - d['запад'], d['север'] - d['юг'])
